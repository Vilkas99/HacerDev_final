{"ast":null,"code":"const leer = interacciones => {\n  let respuestas = {};\n  let tiempo = 0;\n  let corrects = 0;\n  let tiempoIncorrecto = 0;\n  let incorrects = 0;\n  let postTimes = [];\n  let postTimesProm = 0;\n\n  for (let i = 0; i < interacciones.length(); i++) {\n    if (interacciones[i][\"correct\"] == true) {\n      tiempo += interacciones[i][\"time\"];\n      corrects += 1;\n    } else {\n      tiempoIncorrecto += interacciones[i][\"time\"];\n      incorrects += 1;\n\n      if (i + 1 < len(interacciones)) {\n        if (interacciones[i + 1][\"correct\"] != true) {\n          val = interacciones[i + 1][\"time\"] - interacciones[i][\"time\"];\n          postTimes.append(val);\n          postTimesProm += val;\n        }\n      }\n    }\n  }\n\n  let mediaResponse = tiempo / corrects;\n  let mediaIncorrect = tiempoIncorrecto / incorrects;\n  let postTimesProm2 = postTimesProm / (incorrects - 1);\n  let valStandard = 0;\n  let postTimesStandard = 0;\n\n  for (let i = 0; i < interacciones.length(); i++) {\n    if (interacciones[i][\"correct\"] == true) {\n      valStandard += abs(i[\"time\"] - mediaResponse) ** 2;\n    }\n  }\n\n  for (let i = 0; i < postTimes.length(); i++) {\n    postTimesStandard += abs(i - postTimesProm2) ** 2;\n  }\n\n  valStandard = valStandard / corrects;\n  valStandard = math.sqrt(valStandard);\n  postTimesStandard = postTimesStandard / (incorrects - 1);\n  postTimesStandard = math.sqrt(postTimesStandard);\n  respuestas[\"a\"] = valStandard;\n  respuestas[\"b\"] = mediaResponse;\n  respuestas[\"c\"] = incorrects;\n  respuestas[\"d\"] = mediaIncorrect;\n  respuestas[\"e\"] = postTimesStandard;\n  print(respuestas);\n  return respuestas;\n};","map":{"version":3,"sources":["C:/Users/victo/Documents/Programacion/Programacion/WebDev/React/Hack_dev_panel/my-app/src/procesamiento.jsx"],"names":["leer","interacciones","respuestas","tiempo","corrects","tiempoIncorrecto","incorrects","postTimes","postTimesProm","i","length","len","val","append","mediaResponse","mediaIncorrect","postTimesProm2","valStandard","postTimesStandard","abs","math","sqrt","print"],"mappings":"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","sourcesContent":["const leer = (interacciones) => {\r\n  let respuestas = {};\r\n  let tiempo = 0;\r\n  let corrects = 0;\r\n  let tiempoIncorrecto = 0;\r\n  let incorrects = 0;\r\n  let postTimes = [];\r\n  let postTimesProm = 0;\r\n  for (let i = 0; i < interacciones.length(); i++) {\r\n    if (interacciones[i][\"correct\"] == true) {\r\n      tiempo += interacciones[i][\"time\"];\r\n      corrects += 1;\r\n    } else {\r\n      tiempoIncorrecto += interacciones[i][\"time\"];\r\n      incorrects += 1;\r\n      if (i + 1 < len(interacciones)) {\r\n        if (interacciones[i + 1][\"correct\"] != true) {\r\n          val = interacciones[i + 1][\"time\"] - interacciones[i][\"time\"];\r\n          postTimes.append(val);\r\n          postTimesProm += val;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let mediaResponse = tiempo / corrects;\r\n  let mediaIncorrect = tiempoIncorrecto / incorrects;\r\n  let postTimesProm2 = postTimesProm / (incorrects - 1);\r\n\r\n  let valStandard = 0;\r\n  let postTimesStandard = 0;\r\n\r\n  for (let i = 0; i < interacciones.length(); i++) {\r\n    if (interacciones[i][\"correct\"] == true) {\r\n      valStandard += abs(i[\"time\"] - mediaResponse) ** 2;\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < postTimes.length(); i++) {\r\n    postTimesStandard += abs(i - postTimesProm2) ** 2;\r\n  }\r\n\r\n  valStandard = valStandard / corrects;\r\n  valStandard = math.sqrt(valStandard);\r\n  postTimesStandard = postTimesStandard / (incorrects - 1);\r\n  postTimesStandard = math.sqrt(postTimesStandard);\r\n\r\n  respuestas[\"a\"] = valStandard;\r\n  respuestas[\"b\"] = mediaResponse;\r\n  respuestas[\"c\"] = incorrects;\r\n  respuestas[\"d\"] = mediaIncorrect;\r\n  respuestas[\"e\"] = postTimesStandard;\r\n\r\n  print(respuestas);\r\n  return respuestas;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}