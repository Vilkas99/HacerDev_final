{"ast":null,"code":"const leer = interacciones => {\n  let respuestas = {};\n  let tiempo = 0;\n  let corrects = 0;\n  let tiempoIncorrecto = 0;\n  let incorrects = 0;\n  let postTimes = [];\n  let postTimesProm = 0;\n\n  for (let i = 0; i < interacciones.length; i++) {\n    console.log(interacciones[i][\"time\"]);\n\n    if (interacciones[i][\"correct\"] == \"true\") {\n      console.log(interacciones[i][\"time\"]);\n      tiempo += parseInt(interacciones[i][\"time\"]);\n      corrects += 1;\n    } else {\n      tiempoIncorrecto += interacciones[i][\"time\"];\n      incorrects += 1;\n\n      if (i + 1 < interacciones.length) {\n        if (interacciones[i + 1][\"correct\"] != \"true\") {\n          let val = parseInt(interacciones[i + 1][\"time\"]) - parseInt(interacciones[i][\"time\"]);\n          postTimes.push(val);\n          postTimesProm += val;\n        }\n      }\n    }\n  }\n\n  let mediaResponse = tiempo / corrects;\n  let mediaIncorrect = tiempoIncorrecto / incorrects;\n  let postTimesProm2 = postTimesProm / (incorrects - 1);\n  let valStandard = 0;\n  let postTimesStandard = 0;\n\n  for (let i = 0; i < interacciones.length; i++) {\n    if (interacciones[i][\"correct\"] == \"true\") {\n      //console.log(\"Interacciones: \", parseInt(interacciones[i][\"time\"]));\n      valStandard += Math.abs(parseInt(interacciones[i][\"time\"]) - mediaResponse) ** 2;\n    }\n  }\n\n  for (let i = 0; i < postTimes.length; i++) {\n    postTimesStandard += Math.abs(i - postTimesProm2) ** 2;\n  }\n\n  valStandard = valStandard / corrects;\n  valStandard = Math.sqrt(valStandard);\n  postTimesStandard = postTimesStandard / (incorrects - 1);\n  postTimesStandard = Math.sqrt(postTimesStandard);\n  respuestas[\"a\"] = valStandard;\n  respuestas[\"b\"] = mediaResponse;\n  respuestas[\"c\"] = incorrects;\n  respuestas[\"d\"] = mediaIncorrect;\n  respuestas[\"e\"] = postTimesStandard;\n  return respuestas;\n};\n\nexport default leer;","map":{"version":3,"sources":["C:/Users/victo/Documents/Programacion/Programacion/WebDev/React/Hack_dev_panel/my-app/src/procesamiento.jsx"],"names":["leer","interacciones","respuestas","tiempo","corrects","tiempoIncorrecto","incorrects","postTimes","postTimesProm","i","length","console","log","parseInt","val","push","mediaResponse","mediaIncorrect","postTimesProm2","valStandard","postTimesStandard","Math","abs","sqrt"],"mappings":"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","sourcesContent":["const leer = (interacciones) => {\r\n  let respuestas = {};\r\n  let tiempo = 0;\r\n  let corrects = 0;\r\n  let tiempoIncorrecto = 0;\r\n  let incorrects = 0;\r\n  let postTimes = [];\r\n  let postTimesProm = 0;\r\n  for (let i = 0; i < interacciones.length; i++) {\r\n    console.log(interacciones[i][\"time\"]);\r\n    if (interacciones[i][\"correct\"] == \"true\") {\r\n      console.log(interacciones[i][\"time\"]);\r\n      tiempo += parseInt(interacciones[i][\"time\"]);\r\n      corrects += 1;\r\n    } else {\r\n      tiempoIncorrecto += interacciones[i][\"time\"];\r\n      incorrects += 1;\r\n      if (i + 1 < interacciones.length) {\r\n        if (interacciones[i + 1][\"correct\"] != \"true\") {\r\n          let val =\r\n            parseInt(interacciones[i + 1][\"time\"]) -\r\n            parseInt(interacciones[i][\"time\"]);\r\n          postTimes.push(val);\r\n          postTimesProm += val;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let mediaResponse = tiempo / corrects;\r\n  let mediaIncorrect = tiempoIncorrecto / incorrects;\r\n  let postTimesProm2 = postTimesProm / (incorrects - 1);\r\n\r\n  let valStandard = 0;\r\n  let postTimesStandard = 0;\r\n\r\n  for (let i = 0; i < interacciones.length; i++) {\r\n    if (interacciones[i][\"correct\"] == \"true\") {\r\n      //console.log(\"Interacciones: \", parseInt(interacciones[i][\"time\"]));\r\n      valStandard +=\r\n        Math.abs(parseInt(interacciones[i][\"time\"]) - mediaResponse) ** 2;\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < postTimes.length; i++) {\r\n    postTimesStandard += Math.abs(i - postTimesProm2) ** 2;\r\n  }\r\n\r\n  valStandard = valStandard / corrects;\r\n  valStandard = Math.sqrt(valStandard);\r\n  postTimesStandard = postTimesStandard / (incorrects - 1);\r\n  postTimesStandard = Math.sqrt(postTimesStandard);\r\n\r\n  respuestas[\"a\"] = valStandard;\r\n  respuestas[\"b\"] = mediaResponse;\r\n  respuestas[\"c\"] = incorrects;\r\n  respuestas[\"d\"] = mediaIncorrect;\r\n  respuestas[\"e\"] = postTimesStandard;\r\n\r\n  return respuestas;\r\n};\r\n\r\nexport default leer;\r\n"]},"metadata":{},"sourceType":"module"}