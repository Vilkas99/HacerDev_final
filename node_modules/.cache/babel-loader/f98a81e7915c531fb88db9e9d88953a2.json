{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const appSlice = createSlice({\n  name: \"app\",\n  initialState: {\n    datos1: [[]],\n    datos2: [[]],\n    datos3: [[]],\n    datos4: [],\n    mensaje: \"Nos encontramos cargando los datos...\"\n  },\n  reducers: {\n    fnAsignarDatos1: (state, action) => {\n      state.datos1 = state.valor;\n    },\n    fnAsignarDatos2: (state, action) => {\n      state.datos2 = state.valor;\n    },\n    fnAsignarDatos3: (state, action) => {\n      state.datos3 = state.valor;\n    },\n    fnAsignarDatos4: (state, action) => {\n      state.datos4 = state.valor;\n    },\n    fnAsignarMensaje: (state, action) => {\n      state.mensaje = state.valor;\n    }\n  }\n});\nexport const {\n  fnAsignarDatos1,\n  fnAsignarDatos2,\n  fnAsignarDatos3,\n  fnAsignarDatos4,\n  fnAsignarMensaje\n} = appSlice.actions; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\nexport const selectDatos1 = state => state.app.cargando;\nexport const selectDatos2 = state => state.app.cargando;\nexport const selectDatos3 = state => state.app.cargando;\nexport const selectDatos4 = state => state.app.cargando;\nexport const selectMensaje = state => state.app.mensaje;\nexport default appSlice.reducer;","map":{"version":3,"sources":["C:/Users/victo/Documents/Programacion/Programacion/WebDev/React/Hack_dev_panel/my-app/src/redux/app/appSlice.js"],"names":["createSlice","appSlice","name","initialState","datos1","datos2","datos3","datos4","mensaje","reducers","fnAsignarDatos1","state","action","valor","fnAsignarDatos2","fnAsignarDatos3","fnAsignarDatos4","fnAsignarMensaje","actions","selectDatos1","app","cargando","selectDatos2","selectDatos3","selectDatos4","selectMensaje","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAGD,WAAW,CAAC;AAClCE,EAAAA,IAAI,EAAE,KAD4B;AAElCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,MAAM,EAAG,CAAC,EAAD,CADG;AAEZC,IAAAA,MAAM,EAAG,CAAC,EAAD,CAFG;AAGZC,IAAAA,MAAM,EAAG,CAAC,EAAD,CAHG;AAIZC,IAAAA,MAAM,EAAG,EAJG;AAKZC,IAAAA,OAAO,EAAE;AALG,GAFoB;AAWlCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClCD,MAAAA,KAAK,CAACP,MAAN,GAAeO,KAAK,CAACE,KAArB;AACD,KAHO;AAKRC,IAAAA,eAAe,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAChCD,MAAAA,KAAK,CAACN,MAAN,GAAeM,KAAK,CAACE,KAArB;AACH,KAPO;AASRE,IAAAA,eAAe,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAChCD,MAAAA,KAAK,CAACL,MAAN,GAAeK,KAAK,CAACE,KAArB;AACH,KAXO;AAaRG,IAAAA,eAAe,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAChCD,MAAAA,KAAK,CAACJ,MAAN,GAAeI,KAAK,CAACE,KAArB;AACH,KAfO;AAiBRI,IAAAA,gBAAgB,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACjCD,MAAAA,KAAK,CAACH,OAAN,GAAgBG,KAAK,CAACE,KAAtB;AACH;AAnBO;AAXwB,CAAD,CAA5B;AAmCP,OAAO,MAAM;AACXH,EAAAA,eADW;AACMI,EAAAA,eADN;AACuBC,EAAAA,eADvB;AACwCC,EAAAA,eADxC;AACyDC,EAAAA;AADzD,IAEThB,QAAQ,CAACiB,OAFN,C,CAIP;AACA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAIR,KAAD,IAAWA,KAAK,CAACS,GAAN,CAAUC,QAA1C;AACP,OAAO,MAAMC,YAAY,GAAIX,KAAD,IAAWA,KAAK,CAACS,GAAN,CAAUC,QAA1C;AACP,OAAO,MAAME,YAAY,GAAIZ,KAAD,IAAWA,KAAK,CAACS,GAAN,CAAUC,QAA1C;AACP,OAAO,MAAMG,YAAY,GAAIb,KAAD,IAAWA,KAAK,CAACS,GAAN,CAAUC,QAA1C;AACP,OAAO,MAAMI,aAAa,GAAId,KAAD,IAAWA,KAAK,CAACS,GAAN,CAAUZ,OAA3C;AAIP,eAAeP,QAAQ,CAACyB,OAAxB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState: {\r\n    datos1 : [[]], \r\n    datos2 : [[]],\r\n    datos3 : [[]],\r\n    datos4 : [],\r\n    mensaje: \"Nos encontramos cargando los datos...\",\r\n\r\n    \r\n  },\r\n  reducers: {\r\n    fnAsignarDatos1: (state, action) => {\r\n      state.datos1 = state.valor;\r\n    },\r\n\r\n    fnAsignarDatos2: (state, action) => {\r\n        state.datos2 = state.valor;\r\n    },\r\n\r\n    fnAsignarDatos3: (state, action) => {\r\n        state.datos3 = state.valor;\r\n    },\r\n\r\n    fnAsignarDatos4: (state, action) => {\r\n        state.datos4 = state.valor;\r\n    },\r\n\r\n    fnAsignarMensaje: (state, action) => {\r\n        state.mensaje = state.valor;\r\n    },\r\n\r\n  },\r\n});\r\n\r\nexport const {\r\n  fnAsignarDatos1, fnAsignarDatos2, fnAsignarDatos3, fnAsignarDatos4, fnAsignarMensaje\r\n} = appSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectDatos1 = (state) => state.app.cargando;\r\nexport const selectDatos2 = (state) => state.app.cargando;\r\nexport const selectDatos3 = (state) => state.app.cargando;\r\nexport const selectDatos4 = (state) => state.app.cargando;\r\nexport const selectMensaje = (state) => state.app.mensaje;\r\n\r\n  \r\n\r\nexport default appSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}