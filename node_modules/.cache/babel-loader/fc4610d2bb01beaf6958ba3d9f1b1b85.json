{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\Documents\\\\Programacion\\\\Programacion\\\\WebDev\\\\React\\\\Hack_dev_panel\\\\my-app\\\\src\\\\App.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport PrimerPanel from \"./Componentes/chars/verticalChar\";\nimport \"./App.css\";\nimport { db } from \"./servicios/firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./procesamiento\";\nimport { fnAsignarDatos1, fnAsignarDatos2, fnAsignarDatos3, fnAsignarDatos4, fnAsignarMensaje, selectDatos1, selectDatos2, selectDatos3, selectDatos4, selectMensaje } from \"./redux/app/appSlice\";\nimport \"firebase/auth\";\nimport { Container, Col, Row, Button, Card, ListGroup, Navbar } from \"react-bootstrap\";\n\nconst leer = interacciones => {\n  let respuestas = {};\n  let tiempo = 0;\n  let corrects = 0;\n  let tiempoIncorrecto = 0;\n  let incorrects = 0;\n  let postTimes = [];\n  let postTimesProm = 0;\n\n  for (let i = 0; i < interacciones.length; i++) {\n    if (interacciones[i][\"correct\"] == true) {\n      tiempo += interacciones[i][\"time\"];\n      corrects += 1;\n    } else {\n      tiempoIncorrecto += interacciones[i][\"time\"];\n      incorrects += 1;\n\n      if (i + 1 < interacciones.length) {\n        if (interacciones[i + 1][\"correct\"] != true) {\n          let val = interacciones[i + 1][\"time\"] - interacciones[i][\"time\"];\n          postTimes.push(val);\n          postTimesProm += val;\n        }\n      }\n    }\n  }\n\n  let mediaResponse = tiempo / corrects;\n  let mediaIncorrect = tiempoIncorrecto / incorrects;\n  let postTimesProm2 = postTimesProm / (incorrects - 1);\n  let valStandard = 0;\n  let postTimesStandard = 0;\n\n  for (let i = 0; i < interacciones.length(); i++) {\n    if (interacciones[i][\"correct\"] == true) {\n      valStandard += Math.abs(i[\"time\"] - mediaResponse) ** 2;\n    }\n  }\n\n  for (let i = 0; i < postTimes.length(); i++) {\n    postTimesStandard += Math.abs(i - postTimesProm2) ** 2;\n  }\n\n  valStandard = valStandard / corrects;\n  valStandard = Math.sqrt(valStandard);\n  postTimesStandard = postTimesStandard / (incorrects - 1);\n  postTimesStandard = Math.sqrt(postTimesStandard);\n  respuestas[\"a\"] = valStandard;\n  respuestas[\"b\"] = mediaResponse;\n  respuestas[\"c\"] = incorrects;\n  respuestas[\"d\"] = mediaIncorrect;\n  respuestas[\"e\"] = postTimesStandard;\n  return respuestas;\n};\n\nconst MensajeCargando = () => {\n  const [mensaje, setMensaje] = useState(true);\n  let miMensaje = useSelector(selectMensaje);\n  return /*#__PURE__*/React.createElement(Container, {\n    style: {\n      position: \"absolute\",\n      alignContent: \"center\",\n      marginBottom: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, mensaje ? /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    as: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Mensaje\"), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, miMensaje), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"En unos cuantos minutos estaremos listos...\"), miMensaje == \"Nos encontramos cargando los datos...\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => {\n      setMensaje(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"Cerrar\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst Canva = () => {\n  const [datos1, setDatos1] = useState([]);\n  const [datos2, setDatos2] = useState([]);\n  const [datos3, setDatos3] = useState([]);\n  const [datos4, setDatos4] = useState([]);\n  const miData_ResponseType = {\n    labels: [\"Botón1\", \"Boton2\", \"Boton3\", \"Boton4\"],\n    datasets: [{\n      label: \"Sesión1\",\n      backgroundColor: \"rgba(255,99,132,0.2)\",\n      borderColor: \"rgba(255,99,132,1)\",\n      borderWidth: 1,\n      hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n      hoverBorderColor: \"rgba(255,99,132,1)\",\n      data: datos1\n    }, {\n      label: \"Sesión2\",\n      backgroundColor: \"rgba(0, 181, 204, 0.4)\",\n      borderColor: \"rgba(0, 181, 204, 1)\",\n      borderWidth: 1,\n      hoverBackgroundColor: \"rgba(0, 181, 204, 0.4)\",\n      hoverBorderColor: \"rgba(0, 181, 204, 1)\",\n      data: datos2\n    }, {\n      label: \"Sesión3\",\n      backgroundColor: \"rgba(41, 241, 195, 0.4)\",\n      borderColor: \"rgba(41, 241, 195, 1)\",\n      borderWidth: 1,\n      hoverBackgroundColor: \"rgba(41, 241, 195, 0.4)\",\n      hoverBorderColor: \"rgba(255,99,132,1)\",\n      data: datos3\n    }, {\n      label: \"Sesión4\",\n      backgroundColor: \"rgba(247, 202, 24, 0.4)\",\n      borderColor: \"rgba(247, 202, 24, 1)\",\n      borderWidth: 1,\n      hoverBackgroundColor: \"rgba(247, 202, 24, 0.4)\",\n      hoverBorderColor: \"rgba(247, 202, 24, 1)\",\n      data: datos4\n    }]\n  };\n  const asignador = useDispatch(); //Se encarga de asgnar los datos a nuestras variables globales\n\n  const tablaAllData = db.ref(\"/AllData\");\n  const tablaMetricos = db.ref(\"/metricos\");\n\n  const escribirDatos = (responseTimeVariability, responseTime, errorComission, errorOmission) => {\n    tablaMetricos.push({\n      ResponseTimeVariability: responseTimeVariability,\n      ResponseTime: responseTime,\n      ErrorComission: errorComission,\n      ErrorOmission: errorOmission\n    });\n  };\n\n  const requestDatos = async objetos => {\n    let dato = leer(objetos);\n  };\n\n  const crearDatos = async () => {\n    try {\n      asignador(fnAsignarMensaje(\"Nos encontramos cargando los datos...\")); //Escribir información\n\n      await tablaAllData.once(\"value\", function (snapshot) {\n        let objetos = [];\n        snapshot.forEach(function (childSnapshot) {\n          var key = childSnapshot.key;\n          var data = childSnapshot.val(); // ...\n\n          let logroDispararle = false;\n\n          if (data.Excorrect == \"1\") {\n            logroDispararle = true;\n          }\n\n          objetos.push({\n            key: key,\n            tiempo: data.Extime,\n            correcto: logroDispararle\n          });\n        });\n        requestDatos(objetos);\n        console.log(JSON.stringify(objetos));\n      }); //escribirDatos();\n    } catch (error) {\n      console.error(\"No está cargando los datos\", error);\n    }\n  };\n\n  useEffect(() => {\n    crearDatos().then(() => {\n      asignador(fnAsignarMensaje(\"Hemos añadido todos los datos!\"));\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    bg: \"dark\",\n    variant: \"dark\",\n    style: {\n      marginBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    href: \"#home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, \"Panel de administradores (Desarrollado por: V\\xEDctor Mancera, Ituriel Mejia, Salvador Gaytan - Hackeritu)\")), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-md-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    style: {\n      height: \"230px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PrimerPanel, {\n    data: miData_ResponseType,\n    titulo: \"Response Time Var\",\n    className: \"tabla\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PrimerPanel, {\n    data: miData_ResponseType,\n    titulo: \"Response Time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    style: {\n      height: \"230px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PrimerPanel, {\n    data: miData_ResponseType,\n    titulo: \"Comissions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PrimerPanel, {\n    data: miData_ResponseType,\n    titulo: \"Omission\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-md-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-primary\",\n    className: \"btn_select\",\n    onClick: () => {\n      crearDatos();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }, \"Actualizar\"), \" \"));\n};\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Canva, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MensajeCargando, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/victo/Documents/Programacion/Programacion/WebDev/React/Hack_dev_panel/my-app/src/App.jsx"],"names":["React","useState","useEffect","PrimerPanel","db","useDispatch","useSelector","fnAsignarDatos1","fnAsignarDatos2","fnAsignarDatos3","fnAsignarDatos4","fnAsignarMensaje","selectDatos1","selectDatos2","selectDatos3","selectDatos4","selectMensaje","Container","Col","Row","Button","Card","ListGroup","Navbar","leer","interacciones","respuestas","tiempo","corrects","tiempoIncorrecto","incorrects","postTimes","postTimesProm","i","length","val","push","mediaResponse","mediaIncorrect","postTimesProm2","valStandard","postTimesStandard","Math","abs","sqrt","MensajeCargando","mensaje","setMensaje","miMensaje","position","alignContent","marginBottom","Canva","datos1","setDatos1","datos2","setDatos2","datos3","setDatos3","datos4","setDatos4","miData_ResponseType","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","asignador","tablaAllData","ref","tablaMetricos","escribirDatos","responseTimeVariability","responseTime","errorComission","errorOmission","ResponseTimeVariability","ResponseTime","ErrorComission","ErrorOmission","requestDatos","objetos","dato","crearDatos","once","snapshot","forEach","childSnapshot","key","logroDispararle","Excorrect","Extime","correcto","console","log","JSON","stringify","error","then","height","App"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PrimerPanel from \"./Componentes/chars/verticalChar\";\nimport \"./App.css\";\nimport { db } from \"./servicios/firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./procesamiento\";\n\nimport {\n  fnAsignarDatos1,\n  fnAsignarDatos2,\n  fnAsignarDatos3,\n  fnAsignarDatos4,\n  fnAsignarMensaje,\n  selectDatos1,\n  selectDatos2,\n  selectDatos3,\n  selectDatos4,\n  selectMensaje,\n} from \"./redux/app/appSlice\";\n\nimport \"firebase/auth\";\nimport {\n  Container,\n  Col,\n  Row,\n  Button,\n  Card,\n  ListGroup,\n  Navbar,\n} from \"react-bootstrap\";\n\nconst leer = (interacciones) => {\n  let respuestas = {};\n  let tiempo = 0;\n  let corrects = 0;\n  let tiempoIncorrecto = 0;\n  let incorrects = 0;\n  let postTimes = [];\n  let postTimesProm = 0;\n  for (let i = 0; i < interacciones.length; i++) {\n    if (interacciones[i][\"correct\"] == true) {\n      tiempo += interacciones[i][\"time\"];\n      corrects += 1;\n    } else {\n      tiempoIncorrecto += interacciones[i][\"time\"];\n      incorrects += 1;\n      if (i + 1 < interacciones.length) {\n        if (interacciones[i + 1][\"correct\"] != true) {\n          let val = interacciones[i + 1][\"time\"] - interacciones[i][\"time\"];\n          postTimes.push(val);\n          postTimesProm += val;\n        }\n      }\n    }\n  }\n\n  let mediaResponse = tiempo / corrects;\n  let mediaIncorrect = tiempoIncorrecto / incorrects;\n  let postTimesProm2 = postTimesProm / (incorrects - 1);\n\n  let valStandard = 0;\n  let postTimesStandard = 0;\n\n  for (let i = 0; i < interacciones.length(); i++) {\n    if (interacciones[i][\"correct\"] == true) {\n      valStandard += Math.abs(i[\"time\"] - mediaResponse) ** 2;\n    }\n  }\n\n  for (let i = 0; i < postTimes.length(); i++) {\n    postTimesStandard += Math.abs(i - postTimesProm2) ** 2;\n  }\n\n  valStandard = valStandard / corrects;\n  valStandard = Math.sqrt(valStandard);\n  postTimesStandard = postTimesStandard / (incorrects - 1);\n  postTimesStandard = Math.sqrt(postTimesStandard);\n\n  respuestas[\"a\"] = valStandard;\n  respuestas[\"b\"] = mediaResponse;\n  respuestas[\"c\"] = incorrects;\n  respuestas[\"d\"] = mediaIncorrect;\n  respuestas[\"e\"] = postTimesStandard;\n\n  return respuestas;\n};\n\nconst MensajeCargando = () => {\n  const [mensaje, setMensaje] = useState(true);\n\n  let miMensaje = useSelector(selectMensaje);\n  return (\n    <Container\n      style={{\n        position: \"absolute\",\n        alignContent: \"center\",\n        marginBottom: \"30px\",\n      }}\n    >\n      {mensaje ? (\n        <Card>\n          <Card.Header as=\"h5\">Mensaje</Card.Header>\n          <Card.Body>\n            <Card.Title>{miMensaje}</Card.Title>\n            <Card.Text>En unos cuantos minutos estaremos listos...</Card.Text>\n            {miMensaje == \"Nos encontramos cargando los datos...\" ? (\n              <div></div>\n            ) : (\n              <Button\n                variant=\"primary\"\n                onClick={() => {\n                  setMensaje(false);\n                }}\n              >\n                Cerrar\n              </Button>\n            )}\n          </Card.Body>\n        </Card>\n      ) : (\n        <div></div>\n      )}\n    </Container>\n  );\n};\n\nconst Canva = () => {\n  const [datos1, setDatos1] = useState([]);\n  const [datos2, setDatos2] = useState([]);\n  const [datos3, setDatos3] = useState([]);\n  const [datos4, setDatos4] = useState([]);\n\n  const miData_ResponseType = {\n    labels: [\"Botón1\", \"Boton2\", \"Boton3\", \"Boton4\"],\n    datasets: [\n      {\n        label: \"Sesión1\",\n        backgroundColor: \"rgba(255,99,132,0.2)\",\n        borderColor: \"rgba(255,99,132,1)\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n        hoverBorderColor: \"rgba(255,99,132,1)\",\n        data: datos1,\n      },\n      {\n        label: \"Sesión2\",\n        backgroundColor: \"rgba(0, 181, 204, 0.4)\",\n        borderColor: \"rgba(0, 181, 204, 1)\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"rgba(0, 181, 204, 0.4)\",\n        hoverBorderColor: \"rgba(0, 181, 204, 1)\",\n        data: datos2,\n      },\n      {\n        label: \"Sesión3\",\n        backgroundColor: \"rgba(41, 241, 195, 0.4)\",\n        borderColor: \"rgba(41, 241, 195, 1)\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"rgba(41, 241, 195, 0.4)\",\n        hoverBorderColor: \"rgba(255,99,132,1)\",\n        data: datos3,\n      },\n      {\n        label: \"Sesión4\",\n        backgroundColor: \"rgba(247, 202, 24, 0.4)\",\n        borderColor: \"rgba(247, 202, 24, 1)\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"rgba(247, 202, 24, 0.4)\",\n        hoverBorderColor: \"rgba(247, 202, 24, 1)\",\n        data: datos4,\n      },\n    ],\n  };\n\n  const asignador = useDispatch(); //Se encarga de asgnar los datos a nuestras variables globales\n  const tablaAllData = db.ref(\"/AllData\");\n  const tablaMetricos = db.ref(\"/metricos\");\n\n  const escribirDatos = (\n    responseTimeVariability,\n    responseTime,\n    errorComission,\n    errorOmission\n  ) => {\n    tablaMetricos.push({\n      ResponseTimeVariability: responseTimeVariability,\n      ResponseTime: responseTime,\n      ErrorComission: errorComission,\n      ErrorOmission: errorOmission,\n    });\n  };\n\n  const requestDatos = async (objetos) => {\n    let dato = leer(objetos);\n  };\n\n  const crearDatos = async () => {\n    try {\n      asignador(fnAsignarMensaje(\"Nos encontramos cargando los datos...\"));\n      //Escribir información\n      await tablaAllData.once(\"value\", function (snapshot) {\n        let objetos = [];\n\n        snapshot.forEach(function (childSnapshot) {\n          var key = childSnapshot.key;\n          var data = childSnapshot.val();\n          // ...\n\n          let logroDispararle = false;\n\n          if (data.Excorrect == \"1\") {\n            logroDispararle = true;\n          }\n\n          objetos.push({\n            key: key,\n            tiempo: data.Extime,\n            correcto: logroDispararle,\n          });\n        });\n        requestDatos(objetos);\n        console.log(JSON.stringify(objetos));\n      });\n\n      //escribirDatos();\n    } catch (error) {\n      console.error(\"No está cargando los datos\", error);\n    }\n  };\n  useEffect(() => {\n    crearDatos().then(() => {\n      asignador(fnAsignarMensaje(\"Hemos añadido todos los datos!\"));\n    });\n  }, []);\n\n  return (\n    <Container>\n      <Navbar bg=\"dark\" variant=\"dark\" style={{ marginBottom: \"20px\" }}>\n        <Navbar.Brand href=\"#home\">\n          Panel de administradores (Desarrollado por: Víctor Mancera, Ituriel\n          Mejia, Salvador Gaytan - Hackeritu)\n        </Navbar.Brand>\n      </Navbar>\n      <Row className=\"justify-content-md-center\">\n        <Col style={{ height: \"230px\" }}>\n          <PrimerPanel\n            data={miData_ResponseType}\n            titulo=\"Response Time Var\"\n            className=\"tabla\"\n          />\n          <PrimerPanel data={miData_ResponseType} titulo=\"Response Time\" />\n        </Col>\n\n        <Col style={{ height: \"230px\" }}>\n          <PrimerPanel data={miData_ResponseType} titulo=\"Comissions\" />\n          <PrimerPanel data={miData_ResponseType} titulo=\"Omission\" />\n        </Col>\n      </Row>\n      <Row className=\"justify-content-md-center\">\n        <Button\n          variant=\"outline-primary\"\n          className=\"btn_select\"\n          onClick={() => {\n            crearDatos();\n          }}\n        >\n          Actualizar\n        </Button>{\" \"}\n      </Row>\n    </Container>\n  );\n};\n\nfunction App() {\n  return (\n    <Container className=\"App\">\n      <Canva />\n      <MensajeCargando />\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}